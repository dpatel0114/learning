<!DOCTYPE html>
<!-- saved from url=(0046)https://edabit.com/challenge/czEAQio8zr9HjZsQn -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <link rel="stylesheet" type="text/css" class="__meteor-css__" href="./Truthy or Falsy_ __ Edabit_files/c039cef9b47481baf0e9a343e536154438171f0f.css">
  <link rel="stylesheet" type="text/css" class="__meteor-css__" href="./Truthy or Falsy_ __ Edabit_files/36acbe6a181c161f9a179c6451801420146a9f33.css">
<meta name="fragment" content="!">

<script type="text/javascript" async="" src="./Truthy or Falsy_ __ Edabit_files/analytics.js"></script><script async="" src="./Truthy or Falsy_ __ Edabit_files/hotjar-399651.js"></script><style type="text/css">.s-alert-box,.s-alert-box *{-webkit-box-sizing:border-box;box-sizing:border-box}.s-alert-box{position:fixed;background:rgba(42,45,50,0.85);padding:22px;line-height:1.4;z-index:1000;pointer-events:none;color:rgba(250,251,255,0.95);font-size:100%;font-family:'Lato', 'Helvetica Neue', Helvetica, Arial, sans-serif;-webkit-transition:top .4s, bottom .4s;transition:top .4s, bottom .4s}.s-alert-box.s-alert-show{pointer-events:auto}.s-alert-box a{color:inherit;opacity:0.7;font-weight:700}.s-alert-box a:hover,.s-alert-box a:focus{opacity:1}.s-alert-box p{margin:0}.s-alert-box.s-alert-show,.s-alert-box.s-alert-visible{pointer-events:auto}.s-alert-close{width:20px;height:20px;position:absolute;right:4px;top:4px;overflow:hidden;text-indent:100%;cursor:pointer;-webkit-backface-visibility:hidden;backface-visibility:hidden;display:none}.s-alert-close:hover,.s-alert-close:focus{outline:none}.s-alert-close::before,.s-alert-close::after{content:'';position:absolute;width:3px;height:60%;top:50%;left:50%;background:#fff}.s-alert-close:hover::before,.s-alert-close:hover::after{background:#fff}.s-alert-close::before{-webkit-transform:translate(-50%,-50%) rotate(45deg);transform:translate(-50%,-50%) rotate(45deg)}.s-alert-close::after{-webkit-transform:translate(-50%,-50%) rotate(-45deg);transform:translate(-50%,-50%) rotate(-45deg)}.s-alert-bottom-left{top:auto;right:auto;bottom:30px;left:30px}.s-alert-top-left{top:30px;right:auto;bottom:auto;left:30px}.s-alert-top-right{top:30px;right:30px;bottom:auto;left:auto}.s-alert-bottom-right{top:auto;right:30px;bottom:30px;left:auto}.s-alert-bottom{width:100%;max-width:100%;bottom:0;left:0;right:0;top:auto}.s-alert-top{width:100%;max-width:100%;top:0;left:0;right:0;bottom:auto}.s-alert-info{background:#2987CD;color:#fff}.s-alert-success{background:#2DB84B;color:#fff}.s-alert-warning{background:#fabc2e;color:#fff}.s-alert-error{background:#DB2828;color:#fff}[class^="s-alert-effect-"].s-alert-hide,[class*=" s-alert-effect-"].s-alert-hide{-webkit-animation-direction:reverse;animation-direction:reverse}.s-alert-box-height{visibility:hidden;position:fixed}</style><style type="text/css">.s-alert-effect-jelly a{color:#fff}.s-alert-effect-jelly a:hover,.s-alert-effect-jelly a:focus{color:#fff}.s-alert-effect-jelly .s-alert-close::before,.s-alert-effect-jelly .s-alert-close::after{background:#fff}.s-alert-effect-jelly .s-alert-close:hover::before,.s-alert-effect-jelly .s-alert-close:hover::after{background:#fff}.s-alert-effect-jelly.s-alert-show{-webkit-animation-name:animJelly;animation-name:animJelly;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-timing-function:linear;animation-timing-function:linear}.s-alert-effect-jelly.s-alert-hide{-webkit-animation-name:animFade;animation-name:animFade;-webkit-animation-duration:0.3s;animation-duration:0.3s}@-webkit-keyframes animFade{0%{opacity:0}100%{opacity:1}}@keyframes animFade{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes animJelly{0%{-webkit-transform:matrix3d(0.7, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.7, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}2.083333%{-webkit-transform:matrix3d(0.75266, 0, 0, 0, 0, 0.76342, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.75266, 0, 0, 0, 0, 0.76342, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}4.166667%{-webkit-transform:matrix3d(0.81071, 0, 0, 0, 0, 0.84545, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.81071, 0, 0, 0, 0, 0.84545, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}6.25%{-webkit-transform:matrix3d(0.86808, 0, 0, 0, 0, 0.9286, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.86808, 0, 0, 0, 0, 0.9286, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}8.333333%{-webkit-transform:matrix3d(0.92038, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.92038, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}10.416667%{-webkit-transform:matrix3d(0.96482, 0, 0, 0, 0, 1.05202, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.96482, 0, 0, 0, 0, 1.05202, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}12.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1.08204, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1.08204, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}14.583333%{-webkit-transform:matrix3d(1.02563, 0, 0, 0, 0, 1.09149, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.02563, 0, 0, 0, 0, 1.09149, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}16.666667%{-webkit-transform:matrix3d(1.04227, 0, 0, 0, 0, 1.08453, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.04227, 0, 0, 0, 0, 1.08453, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}18.75%{-webkit-transform:matrix3d(1.05102, 0, 0, 0, 0, 1.06666, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05102, 0, 0, 0, 0, 1.06666, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}20.833333%{-webkit-transform:matrix3d(1.05334, 0, 0, 0, 0, 1.04355, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05334, 0, 0, 0, 0, 1.04355, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}22.916667%{-webkit-transform:matrix3d(1.05078, 0, 0, 0, 0, 1.02012, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05078, 0, 0, 0, 0, 1.02012, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}25%{-webkit-transform:matrix3d(1.04487, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.04487, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}27.083333%{-webkit-transform:matrix3d(1.03699, 0, 0, 0, 0, 0.98534, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.03699, 0, 0, 0, 0, 0.98534, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}29.166667%{-webkit-transform:matrix3d(1.02831, 0, 0, 0, 0, 0.97688, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.02831, 0, 0, 0, 0, 0.97688, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}31.25%{-webkit-transform:matrix3d(1.01973, 0, 0, 0, 0, 0.97422, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.01973, 0, 0, 0, 0, 0.97422, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}33.333333%{-webkit-transform:matrix3d(1.01191, 0, 0, 0, 0, 0.97618, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.01191, 0, 0, 0, 0, 0.97618, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}35.416667%{-webkit-transform:matrix3d(1.00526, 0, 0, 0, 0, 0.98122, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00526, 0, 0, 0, 0, 0.98122, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}37.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 0.98773, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 0.98773, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}39.583333%{-webkit-transform:matrix3d(0.99617, 0, 0, 0, 0, 0.99433, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99617, 0, 0, 0, 0, 0.99433, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}41.666667%{-webkit-transform:matrix3d(0.99368, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99368, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}43.75%{-webkit-transform:matrix3d(0.99237, 0, 0, 0, 0, 1.00413, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99237, 0, 0, 0, 0, 1.00413, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}45.833333%{-webkit-transform:matrix3d(0.99202, 0, 0, 0, 0, 1.00651, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99202, 0, 0, 0, 0, 1.00651, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}47.916667%{-webkit-transform:matrix3d(0.99241, 0, 0, 0, 0, 1.00726, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99241, 0, 0, 0, 0, 1.00726, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}50%{-webkit-transform:matrix3d(0.99329, 0, 0, 0, 0, 1.00671, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99329, 0, 0, 0, 0, 1.00671, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}52.083333%{-webkit-transform:matrix3d(0.99447, 0, 0, 0, 0, 1.00529, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99447, 0, 0, 0, 0, 1.00529, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}54.166667%{-webkit-transform:matrix3d(0.99577, 0, 0, 0, 0, 1.00346, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99577, 0, 0, 0, 0, 1.00346, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}56.25%{-webkit-transform:matrix3d(0.99705, 0, 0, 0, 0, 1.0016, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99705, 0, 0, 0, 0, 1.0016, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}58.333333%{-webkit-transform:matrix3d(0.99822, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99822, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}60.416667%{-webkit-transform:matrix3d(0.99921, 0, 0, 0, 0, 0.99884, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99921, 0, 0, 0, 0, 0.99884, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}62.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 0.99816, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 0.99816, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}64.583333%{-webkit-transform:matrix3d(1.00057, 0, 0, 0, 0, 0.99795, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00057, 0, 0, 0, 0, 0.99795, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}66.666667%{-webkit-transform:matrix3d(1.00095, 0, 0, 0, 0, 0.99811, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00095, 0, 0, 0, 0, 0.99811, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}68.75%{-webkit-transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99851, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99851, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}70.833333%{-webkit-transform:matrix3d(1.00119, 0, 0, 0, 0, 0.99903, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00119, 0, 0, 0, 0, 0.99903, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}72.916667%{-webkit-transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99955, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99955, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}75%{-webkit-transform:matrix3d(1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}77.083333%{-webkit-transform:matrix3d(1.00083, 0, 0, 0, 0, 1.00033, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00083, 0, 0, 0, 0, 1.00033, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}79.166667%{-webkit-transform:matrix3d(1.00063, 0, 0, 0, 0, 1.00052, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00063, 0, 0, 0, 0, 1.00052, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}81.25%{-webkit-transform:matrix3d(1.00044, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00044, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}83.333333%{-webkit-transform:matrix3d(1.00027, 0, 0, 0, 0, 1.00053, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00027, 0, 0, 0, 0, 1.00053, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}85.416667%{-webkit-transform:matrix3d(1.00012, 0, 0, 0, 0, 1.00042, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00012, 0, 0, 0, 0, 1.00042, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}87.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1.00027, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1.00027, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}89.583333%{-webkit-transform:matrix3d(0.99991, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99991, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}91.666667%{-webkit-transform:matrix3d(0.99986, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99986, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}93.75%{-webkit-transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}95.833333%{-webkit-transform:matrix3d(0.99982, 0, 0, 0, 0, 0.99985, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99982, 0, 0, 0, 0, 0.99985, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}97.916667%{-webkit-transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}100%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}}@keyframes animJelly{0%{-webkit-transform:matrix3d(0.7, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.7, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}2.083333%{-webkit-transform:matrix3d(0.75266, 0, 0, 0, 0, 0.76342, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.75266, 0, 0, 0, 0, 0.76342, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}4.166667%{-webkit-transform:matrix3d(0.81071, 0, 0, 0, 0, 0.84545, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.81071, 0, 0, 0, 0, 0.84545, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}6.25%{-webkit-transform:matrix3d(0.86808, 0, 0, 0, 0, 0.9286, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.86808, 0, 0, 0, 0, 0.9286, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}8.333333%{-webkit-transform:matrix3d(0.92038, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.92038, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}10.416667%{-webkit-transform:matrix3d(0.96482, 0, 0, 0, 0, 1.05202, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.96482, 0, 0, 0, 0, 1.05202, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}12.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1.08204, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1.08204, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}14.583333%{-webkit-transform:matrix3d(1.02563, 0, 0, 0, 0, 1.09149, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.02563, 0, 0, 0, 0, 1.09149, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}16.666667%{-webkit-transform:matrix3d(1.04227, 0, 0, 0, 0, 1.08453, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.04227, 0, 0, 0, 0, 1.08453, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}18.75%{-webkit-transform:matrix3d(1.05102, 0, 0, 0, 0, 1.06666, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05102, 0, 0, 0, 0, 1.06666, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}20.833333%{-webkit-transform:matrix3d(1.05334, 0, 0, 0, 0, 1.04355, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05334, 0, 0, 0, 0, 1.04355, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}22.916667%{-webkit-transform:matrix3d(1.05078, 0, 0, 0, 0, 1.02012, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.05078, 0, 0, 0, 0, 1.02012, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}25%{-webkit-transform:matrix3d(1.04487, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.04487, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}27.083333%{-webkit-transform:matrix3d(1.03699, 0, 0, 0, 0, 0.98534, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.03699, 0, 0, 0, 0, 0.98534, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}29.166667%{-webkit-transform:matrix3d(1.02831, 0, 0, 0, 0, 0.97688, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.02831, 0, 0, 0, 0, 0.97688, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}31.25%{-webkit-transform:matrix3d(1.01973, 0, 0, 0, 0, 0.97422, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.01973, 0, 0, 0, 0, 0.97422, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}33.333333%{-webkit-transform:matrix3d(1.01191, 0, 0, 0, 0, 0.97618, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.01191, 0, 0, 0, 0, 0.97618, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}35.416667%{-webkit-transform:matrix3d(1.00526, 0, 0, 0, 0, 0.98122, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00526, 0, 0, 0, 0, 0.98122, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}37.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 0.98773, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 0.98773, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}39.583333%{-webkit-transform:matrix3d(0.99617, 0, 0, 0, 0, 0.99433, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99617, 0, 0, 0, 0, 0.99433, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}41.666667%{-webkit-transform:matrix3d(0.99368, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99368, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}43.75%{-webkit-transform:matrix3d(0.99237, 0, 0, 0, 0, 1.00413, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99237, 0, 0, 0, 0, 1.00413, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}45.833333%{-webkit-transform:matrix3d(0.99202, 0, 0, 0, 0, 1.00651, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99202, 0, 0, 0, 0, 1.00651, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}47.916667%{-webkit-transform:matrix3d(0.99241, 0, 0, 0, 0, 1.00726, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99241, 0, 0, 0, 0, 1.00726, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}50%{-webkit-transform:matrix3d(0.99329, 0, 0, 0, 0, 1.00671, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99329, 0, 0, 0, 0, 1.00671, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}52.083333%{-webkit-transform:matrix3d(0.99447, 0, 0, 0, 0, 1.00529, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99447, 0, 0, 0, 0, 1.00529, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}54.166667%{-webkit-transform:matrix3d(0.99577, 0, 0, 0, 0, 1.00346, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99577, 0, 0, 0, 0, 1.00346, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}56.25%{-webkit-transform:matrix3d(0.99705, 0, 0, 0, 0, 1.0016, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99705, 0, 0, 0, 0, 1.0016, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}58.333333%{-webkit-transform:matrix3d(0.99822, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99822, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}60.416667%{-webkit-transform:matrix3d(0.99921, 0, 0, 0, 0, 0.99884, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99921, 0, 0, 0, 0, 0.99884, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}62.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 0.99816, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 0.99816, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}64.583333%{-webkit-transform:matrix3d(1.00057, 0, 0, 0, 0, 0.99795, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00057, 0, 0, 0, 0, 0.99795, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}66.666667%{-webkit-transform:matrix3d(1.00095, 0, 0, 0, 0, 0.99811, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00095, 0, 0, 0, 0, 0.99811, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}68.75%{-webkit-transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99851, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99851, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}70.833333%{-webkit-transform:matrix3d(1.00119, 0, 0, 0, 0, 0.99903, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00119, 0, 0, 0, 0, 0.99903, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}72.916667%{-webkit-transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99955, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00114, 0, 0, 0, 0, 0.99955, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}75%{-webkit-transform:matrix3d(1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.001, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}77.083333%{-webkit-transform:matrix3d(1.00083, 0, 0, 0, 0, 1.00033, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00083, 0, 0, 0, 0, 1.00033, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}79.166667%{-webkit-transform:matrix3d(1.00063, 0, 0, 0, 0, 1.00052, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00063, 0, 0, 0, 0, 1.00052, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}81.25%{-webkit-transform:matrix3d(1.00044, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00044, 0, 0, 0, 0, 1.00058, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}83.333333%{-webkit-transform:matrix3d(1.00027, 0, 0, 0, 0, 1.00053, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00027, 0, 0, 0, 0, 1.00053, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}85.416667%{-webkit-transform:matrix3d(1.00012, 0, 0, 0, 0, 1.00042, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1.00012, 0, 0, 0, 0, 1.00042, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}87.5%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1.00027, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1.00027, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}89.583333%{-webkit-transform:matrix3d(0.99991, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99991, 0, 0, 0, 0, 1.00013, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}91.666667%{-webkit-transform:matrix3d(0.99986, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99986, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}93.75%{-webkit-transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99991, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}95.833333%{-webkit-transform:matrix3d(0.99982, 0, 0, 0, 0, 0.99985, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99982, 0, 0, 0, 0, 0.99985, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}97.916667%{-webkit-transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(0.99983, 0, 0, 0, 0, 0.99984, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}100%{-webkit-transform:matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);transform:matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)}}</style><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="googlebot" content="noindex" dochead="1"><meta name="robots" content="noindex" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:type" content="website" dochead="1"><script type="text/javascript" src="./Truthy or Falsy_ __ Edabit_files/en"></script><script async="" src="./Truthy or Falsy_ __ Edabit_files/modules.ad1e941217c27a6ed973.js" charset="utf-8"></script><style type="text/css">iframe#_hjRemoteVarsFrame {display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;}</style><meta name="description" content="undefined" dochead="1"><meta name="keywords" content="undefined" dochead="1"><meta property="og:description" content="undefined" dochead="1"><meta property="og:title" content="undefined" dochead="1"><title>Truthy or Falsy? // Edabit</title><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="There has been a masterdata issue which affected the unit of measure of the products. All values need to be checked if they are valid. The unit of measure is valid when it is either " l"="" (liters),="" "pce"="" (pieces)="" or="" when="" the="" product="" has="" a="" comment.="" return="" value="" should="" be="" boolean.="" expected="" results="" hasvalidunitofmeasure({="" "product":="" "milk",="" unitofmeasure:="" ""="" dochead="1"><meta property="og:title" content="Find the Bug: Returning Valid Units of Measure" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given an array of integers, return the difference between the largest and smallest integers in the array.

Examples
difference([10, 15, 20, 2, 10, 6]) ➞ 18
// 20 - 2 = 18

difference([-3, 4, -9, -1, -2, 15]) ➞ 24
// 15 - (-9) = 24

Notes
N/A" dochead="1"><meta property="og:title" content="Maximum Difference" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="You work for a manufacturer, and have been asked to calculate the total profit made on the sales of a product. You are given an object containing the cost price per unit (in dollars), sell price per unit (in dollars), and the starting inventory. Return the total profit made, rounded to the nearest dollar. Assume all of the inventory has been sold.

Examples
pr" dochead="1"><meta property="og:title" content="Calculate the Profit" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Given a number and an object with min and max properties, return true if the number lies within the given range (inclusive).

Examples
isInRange(4, { min: 0, max: 5 }) ➞ true

isInRange(4, { min: 4, max: 5 }) ➞ true

isInRange(4, { min: 6, max: 10 }) ➞ false

isInRange(5, { min: 5, max: 5 }) ➞ true

Notes
Numbers can be positive or negative, and they may not b" dochead="1"><meta property="og:title" content="Check if Number is within a Given Range" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes an array of numbers and return the first and last elements as a new array.

Examples
firstLast([5, 10, 15, 20, 25]) ➞ [5, 25]

firstLast([" edabit",="" 13,="" null,="" false,="" true])="" ➞="" ["edabit",="" true]="" firstlast([undefined,="" 4,="" "6",="" "hello",="" null])="" [undefined,="" null]="" notes="" test="" input="" will="" always="" contain="" a="" minimum="" of="" two="" elements="" within="" the="" "="" dochead="1"><meta property="og:title" content="Return the First and Last Elements in an Array" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Write a function that checks if two numbers are either:

Smaller than 0
Greater than 0
Exactly 0

Examples
both(6, 2) ➞ true

both(0, 0) ➞ true

both(-1, 2) ➞ false

Notes
Inputs will always be two numbers." dochead="1"><meta property="og:title" content="Both Zero, Negative or Positive" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="description" content="Practice coding with spaced repetition, a learning technique that utilises the psychological spacing effect." dochead="1"><meta name="keywords" content="tinker" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:description" content="Practice coding with spaced repetition, a learning technique that utilises the psychological spacing effect." dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:title" content="Strengthen Your Coding Skills // Edabit" dochead="1"><meta property="og:type" content="website" dochead="1"><meta name="description" content="Practice coding with fun, bite-sized challenges. Earn XP, unlock achievements and level up. It&#39;s like Duolingo for learning to code." dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="keywords" content="coding challenges, programming challenges" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:description" content="Learn to code with fun, bite-sized challenges. Earn XP, unlock achievements and level up. It&#39;s like Duolingo for learning to code." dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:title" content="Learn to Code with 4,500+ Interactive Challenges" dochead="1"><meta property="og:type" content="website" dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="description" content="Supports: Python, Java, Ruby, Swift, JavaScript, PHP, C++ and C#" dochead="1"><meta name="keywords" content="tinker" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:description" content="Tinker tool" dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:title" content="Online Compiler: JavaScript, Python, Java, Ruby, Swift, PHP, C++, C#" dochead="1"><meta property="og:type" content="website" dochead="1"><meta name="description" content="Practice coding with fun, bite-sized challenges. Earn XP, unlock achievements and level up. It&#39;s like Duolingo for learning to code." dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="keywords" content="coding challenges, programming challenges" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:description" content="Learn to code with fun, bite-sized challenges. Earn XP, unlock achievements and level up. It&#39;s like Duolingo for learning to code." dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:title" content="Learn to Code with 4,500+ Interactive Challenges" dochead="1"><meta property="og:type" content="website" dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="description" content="Practice coding with spaced repetition, a learning technique that utilises the psychological spacing effect." dochead="1"><meta name="keywords" content="tinker" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:description" content="Practice coding with spaced repetition, a learning technique that utilises the psychological spacing effect." dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:title" content="Strengthen Your Coding Skills // Edabit" dochead="1"><meta property="og:type" content="website" dochead="1"><link rel="icon" type="image/png" href="https://s3.amazonaws.com/edabit-images/logo_main_medium.png" dochead="1"><meta name="googlebot" content="noindex" dochead="1"><meta name="robots" content="noindex" dochead="1"><meta name="twitter:card" content="summary_large_image" dochead="1"><meta name="twitter:site" content="@edabit" dochead="1"><meta property="og:image" content="https://s3.amazonaws.com/edabit-images/logo_wide_large.png" dochead="1"><meta property="og:site_name" content="edabit" dochead="1"><meta property="og:type" content="website" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes three number arguments — one number as an input and two additional numbers representing the endpoints of a closed range — and return the number limited to this range.

If the number falls within the range, the number should be returned.
If the number is less than the lower limit of the range, the lower limit should be returned.
If" dochead="1"><meta property="og:title" content="Limit a Number&#39;s Value" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Tom is a very methodic guy that loves geometry and pizza: he loves them so much that, before eating a pizza, he calculates its radius and its height. Now, he wants to know from you the total volume of pizza that he swallowed!

You are given the two parameters that Tom measured:

radius
height

He tells you that if you multiply the height for the square of the" dochead="1"><meta property="og:title" content="Volume of a Pizza" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that takes a string and returns the word count. The string will be a sentence.

Examples
countWords(" just="" an="" example="" here="" move="" along")="" ➞="" 6="" countwords("this="" is="" a="" test")="" 4="" countwords("what="" easy="" task,="" right")="" 5="" notes="" if="" you="" get="" stuck="" on="" challenge,="" find="" help="" in="" the="" resources="" tab.="" you're="" really="" stuck,="" unlock="" solutions="" solutio"="" dochead="1"><meta property="og:title" content="Get Word Count" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="Create a function that returns the next element in an arithmetic sequence. In an arithmetic sequence, each element is formed by adding the same constant to the previous element.

Examples
nextElement([3, 5, 7, 9]) ➞ 11

nextElement([-5, -6, -7]) ➞ -8

nextElement([2, 2, 2, 2, 2]) ➞ 2

Notes
All input arrays will contain integers only." dochead="1"><meta property="og:title" content="Next Element in Arithmetic Sequence" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"><meta name="description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta name="keywords" content="javascript" dochead="1"><meta property="og:description" content="A value is said to be " truthy"="" if="" it="" evaluates="" to="" true="" in="" a="" boolean="" context.="" all="" values="" are="" truthy="" javascript="" unless="" they're="" one="" of="" the="" following:="" false="" null="" undefined="" 0="" nan="" ""="" javascript,="" an="" empty="" object="" and="" array="" both="" considered="" "truthy,"="" but="" string="" is="" when="" evaluated="" as="" (this="" behavior="" what="" we="" call="" dochead="1"><meta property="og:title" content="Truthy or Falsy?" dochead="1"></head>
<body class="">
  <script type="text/javascript">__meteor_runtime_config__ = JSON.parse(decodeURIComponent("%7B%22meteorRelease%22%3A%22METEOR%401.8.1%22%2C%22gitCommitHash%22%3A%22cca35adf2596c807ee3f3fa2a186b14709542d72%22%2C%22meteorEnv%22%3A%7B%22NODE_ENV%22%3A%22production%22%2C%22TEST_METADATA%22%3A%22%7B%7D%22%7D%2C%22PUBLIC_SETTINGS%22%3A%7B%22analyticsSettings%22%3A%7B%22Google%20Analytics%22%3A%7B%22trackingId%22%3A%22UA-91229704-1%22%7D%7D%2C%22hotjar%22%3A%7B%22hjid%22%3A%22399651%22%2C%22hjsv%22%3A%221%22%7D%2C%22stripeKey%22%3A%22pk_test_tvsqJuN2oUqXxCKHnBmrCqj9%22%7D%2C%22ROOT_URL%22%3A%22https%3A%2F%2Fedabit.com%22%2C%22ROOT_URL_PATH_PREFIX%22%3A%22%22%2C%22autoupdate%22%3A%7B%22versions%22%3A%7B%22web.browser%22%3A%7B%22version%22%3A%22f6426b1c06ad2218316c6e2700d7fcb21da05077%22%2C%22versionRefreshable%22%3A%22db0e7795bf5eadbca353d632b93e9796f63a232f%22%2C%22versionNonRefreshable%22%3A%2276a4383b0dd5c1c2f80cb72280a366a6d801979a%22%7D%2C%22web.browser.legacy%22%3A%7B%22version%22%3A%226e4eab7dd4706a9628e9b24489bd1ac0a8bdff4a%22%2C%22versionRefreshable%22%3A%22db0e7795bf5eadbca353d632b93e9796f63a232f%22%2C%22versionNonRefreshable%22%3A%22a264863df2fb2ad4ddb60b25f8ae0e3e2b85e2a3%22%7D%7D%2C%22autoupdateVersion%22%3Anull%2C%22autoupdateVersionRefreshable%22%3Anull%2C%22autoupdateVersionCordova%22%3Anull%2C%22appId%22%3A%226oe24v3kjymx1952geg%22%7D%2C%22appId%22%3A%226oe24v3kjymx1952geg%22%2C%22isModern%22%3Atrue%7D"))</script>

  <script type="text/javascript" src="./Truthy or Falsy_ __ Edabit_files/318dd472a196a28618a1f940ad081a0fe67d90c1.js"></script>



<div id="react-root"><div data-reactroot="" id="MainLayout"><header><div class="nav-shadow" style="background-color: rgb(45, 184, 75);"><div class="ui inverted text attached menu"><div class="ui container" style="height: 65px;"><a href="https://edabit.com/challenges" class="active link item edabit-logo" style="margin-top: 4px; margin-left: -18px; font-weight: 600;">edabit</a><a href="https://edabit.com/tinker" class="link item navbar-item" style="font-size: 1.15rem; font-weight: 500; letter-spacing: 0.02em;"><span>Tinker</span></a><a href="https://edabit.com/challenges" class="active link item navbar-item" style="font-size: 1.15rem; font-weight: 500; letter-spacing: 0.02em; border-bottom: 3px solid white; padding-bottom: 5px;"><span>Challenges</span></a><a href="https://edabit.com/strengthen" class="link item navbar-item" style="font-size: 1.15rem; font-weight: 500; letter-spacing: 0.02em;"><span>Strengthen</span></a><a href="https://edabit.com/help" class="link item navbar-item" style="font-size: 1.15rem; font-weight: 500; letter-spacing: 0.02em;"><span>Help</span></a><div class="right menu"><a class="item pointer navbar-item"><div class="avenir" style="font-size: 1.15rem; margin-top: 1px; font-weight: 500; letter-spacing: 0.02em;"><!-- react-text: 154 -->320<!-- /react-text --><!-- react-text: 155 --> <!-- /react-text --><span>XP</span></div></a><div class="item"><div role="listbox" aria-expanded="false" class="ui top right pointing dropdown no-highlight" tabindex="0"><div class="text" role="alert" aria-live="polite"></div><i aria-hidden="true" class="alarm icon"></i><div class="menu transition" style="margin-right: -7px; margin-top: 9px; min-width: 160px;"><div class="header" style="cursor: default;"><span>Notifications</span></div><div class="divider"></div><div role="option" aria-disabled="true" class="disabled item"><span>You don't have any notifications.</span></div><div class="divider"></div><div class="header"></div></div></div><div class="ui red mini circular floating label hidden">0</div></div><div class="item"><div><div role="listbox" aria-expanded="false" class="ui top right pointing dropdown" tabindex="0"><div class="text" role="alert" aria-live="polite"></div><i aria-hidden="true" class="plus icon"></i><div class="menu transition" style="margin-right: -7px; margin-top: 9px; min-width: 130px;"><div role="option" class="item"><span>New Challenge</span></div><a href="https://edabit.com/translate?firstLang=javascript" role="option" class="item"><span>New Translation</span></a><div role="option" class="item"><span>New Collection</span></div></div></div></div></div><div class="item"><div id="UserDropdown"><div role="listbox" aria-expanded="false" class="ui top right pointing dropdown" tabindex="0"><span><img src="./Truthy or Falsy_ __ Edabit_files/avatar_generic.gif" class="ui mini avatar image"></span><div class="menu transition" style="margin-top: 9px;"><div role="option" aria-disabled="true" class="disabled item" style="width: 150px; margin-bottom: -5px;"><span>Signed in as</span><!-- react-text: 189 --> <!-- /react-text --><strong>dp1991</strong></div><div class="divider"></div><a href="https://edabit.com/user/tosZgDGQJdJqrFFC2" role="option" class="item"><span>Your Profile</span></a><a href="https://edabit.com/help" role="option" class="item"><span>Get Help</span></a><div role="option" class="item"><span>Settings</span></div><div class="divider"></div><div role="option" class="item"><span>Sign Out</span></div></div></div></div></div></div></div></div></div></header><main id="Main"><div class="ui container" style="margin-bottom: 10px; margin-top: 10px;"><div class="ui doubling stackable two column grid"><div class="ten wide column"><div class="rc-tabs rc-tabs-top"><div role="tablist" class="rc-tabs-bar no-highlight" tabindex="0"><div style="float: right;"><div role="listbox" aria-expanded="false" class="ui simple top right pointing dropdown" tabindex="0" style="margin-top: 10px; padding-bottom: 3px;"><div class="text" role="alert" aria-live="polite"></div><i aria-hidden="true" class="ellipsis horizontal large link icon"></i><div class="menu transition" style="margin-right: -4px; margin-top: 0px; min-width: 130px;"><div role="option" aria-disabled="false" class="item"><span>Add to bookmarks</span></div><div role="option" aria-disabled="false" class="item"><span>Add to collection</span></div><div class="divider"></div><div role="option" aria-disabled="false" class="item"><span>View analytics</span></div><div role="option" aria-disabled="false" class="item"><span>New translation</span></div><div role="option" aria-disabled="false" class="item"><span class="text">Reset code</span></div><div class="divider"></div><div role="option" aria-disabled="true" class="disabled item"><span>Edit</span></div></div></div></div><div class="rc-tabs-nav-container"><span unselectable="unselectable" class="rc-tabs-tab-prev rc-tabs-tab-btn-disabled"><span class="rc-tabs-tab-prev-icon"></span></span><span unselectable="unselectable" class="rc-tabs-tab-next rc-tabs-tab-btn-disabled"><span class="rc-tabs-tab-next-icon"></span></span><div class="rc-tabs-nav-wrap"><div class="rc-tabs-nav-scroll"><div class="rc-tabs-nav rc-tabs-nav-animated"><div class="rc-tabs-ink-bar rc-tabs-ink-bar-animated" style="display: block; transform: translate3d(115.141px, 0px, 0px); width: 55px;"></div><div role="tab" aria-disabled="false" aria-selected="false" class=" rc-tabs-tab"><span>Instructions</span></div><div role="tab" aria-disabled="false" aria-selected="true" class="rc-tabs-tab-active rc-tabs-tab"><span>Code</span></div><div role="tab" aria-disabled="false" aria-selected="false" class=" rc-tabs-tab"><span>Resources</span></div><div role="tab" aria-disabled="false" aria-selected="false" class=" rc-tabs-tab"><span>Solutions</span></div><div role="tab" aria-disabled="false" aria-selected="false" class=" rc-tabs-tab"><span>Comments</span></div></div></div></div></div></div><div class="rc-tabs-content rc-tabs-content-no-animated"><div role="tabpanel" aria-hidden="true" class="rc-tabs-tabpane rc-tabs-tabpane-inactive"><div><div class="grey-segment code-area instructions"><div class="ui header"><h2 class="content" style="font-size: 1.75rem; margin-top: -3px;">Truthy or Falsy?</h2><div class="sub header no-highlight" style="font-size: 1.05rem; margin-bottom: 8px; margin-top: -10px;"><span>Published by</span><!-- react-text: 18670 --> <!-- /react-text --><a href="https://edabit.com/user/inmjjfsii2M4CMf34" style="color: rgb(41, 135, 205); font-weight: 700;">Taylor Burke</a><!-- react-text: 18672 --> <!-- /react-text --><span>in</span><!-- react-text: 18674 --> <!-- /react-text --><div role="listbox" aria-expanded="false" class="ui inline simple dropdown" tabindex="0" style="color: rgb(41, 135, 205); padding-bottom: 3px;"><div class="text" role="alert" aria-live="polite">JavaScript</div><i aria-hidden="true" class="caret down icon"></i><div class="menu transition" style="margin-top: 0px;"><div class="header" style="cursor: default;"><span>Languages</span></div><div class="divider"></div><div role="option" aria-checked="true" class="active item"><span class="text">JavaScript</span></div><div role="option" aria-checked="false" class="item"><span class="text">PHP</span></div><div role="option" aria-checked="false" class="item"><span class="text">Python</span></div><div class="divider"></div><div role="option" aria-disabled="false" class="item" style="min-width: 150px;"><i aria-hidden="true" class="plus icon"></i><span>Translate</span></div></div></div></div><div class="sub header no-highlight" style="margin-left: -8px; margin-top: -2px;"><a class="ui label" style="margin-right: -2px;"><!-- react-text: 18694 -->conditions<!-- /react-text --></a><a class="ui label" style="margin-right: -2px;"><!-- react-text: 18696 -->control_flow<!-- /react-text --></a><a class="ui label" style="margin-right: -2px;"><!-- react-text: 18988 -->language_fundamentals<!-- /react-text --></a><a class="ui label" style="margin-right: -2px;"><!-- react-text: 19214 -->validation<!-- /react-text --></a></div></div><div><p><span>A value is said to be "truthy" if it evaluates to </span><code>true</code><span> in a Boolean context. All values are truthy in JavaScript unless they're one of the following:</span></p><ul><li><code>false</code></li><li><code>null</code></li><li><code>undefined</code></li><li><code>0</code></li><li><code>NaN</code></li><li><code>""</code></li></ul><p><span>In JavaScript, an empty object and an empty array are both considered "truthy," but an empty string is considered </span><code>false</code><span> when evaluated as a Boolean (this behavior is what we call "falsey").</span></p><p><span>Create a function that takes an argument of any data type and returns </span><code>1</code><span> if it's truthy and </span><code>0</code><span> if it's falsy.</span></p><h3><span>Examples</span></h3><pre><code>isTruthy(0) ➞ 0

isTruthy(false) ➞ 0

isTruthy("") ➞ 0

isTruthy("false") ➞ 1</code></pre><h3><span>Notes</span></h3><ul><li><span>You may have to take into account NaN's unique behavior in JavaScript. While other falsey values are equal to themselves, NaN != NaN</span></li><li><span>If you get stuck on a challenge, find help in the </span><strong><span>Resources</span></strong><span> tab.</span></li><li><span>If you're </span><em><span>really</span></em><span> stuck, unlock solutions in the </span><strong><span>Solutions</span></strong><span> tab.</span></li></ul></div><div style="margin-top: 15px;"><a class="ui blue tiny bottom right attached label"><!-- react-text: 18753 -->SUGGEST EDIT<!-- /react-text --></a></div></div></div></div><div role="tabpanel" aria-hidden="false" class="rc-tabs-tabpane rc-tabs-tabpane-active"><div id="Code"><div class="ReactCodeMirror ReactCodeMirror--focused code-editor"><textarea autocomplete="off" style="display: none;">function isTruthy(input) {
	if(input === false || input === 0 || input === undefined || input === "" || input === null){
		return 0
	}else if(input === NaN) {
		return 0
	}else {
		return 1
	}
}</textarea><div class="CodeMirror cm-s-default CodeMirror-focused"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 83px; left: 140.938px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="height: 18px; pointer-events: none; right: 0px; left: 30px; display: block;"><div style="height: 100%; min-height: 1px; width: 860px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1" draggable="false"><div class="CodeMirror-sizer" style="margin-left: 30px; margin-bottom: 0px; border-right-width: 30px; min-height: 236px; min-width: 860.344px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like">x</pre></div><div class="CodeMirror-measure"><pre class="CodeMirror-line" role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">function</span> <span class="cm-def">isTruthy</span>(<span class="cm-def">input</span>) {</span></pre></div><div style="position: relative; z-index: 1;"><div class="CodeMirror-selected" style="position: absolute; left: 109.938px; top: 72px; width: 90.0312px; height: 24px;"></div></div><div class="CodeMirror-cursors" style=""></div><div class="CodeMirror-code" role="presentation" style=""><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">1</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-keyword">function</span> <span class="cm-def">isTruthy</span>(<span class="cm-def">input</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">2</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-keyword">if</span>(<span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-atom">false</span> <span class="cm-operator">||</span> <span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-number">0</span> <span class="cm-operator">||</span> <span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-atom">undefined</span> <span class="cm-operator">||</span> <span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-string">""</span> <span class="cm-operator">||</span> <span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-atom">null</span>){</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">3</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-keyword">return</span> <span class="cm-number">0</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">4</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span>}<span class="cm-keyword">else</span> <span class="cm-keyword">if</span>(<span class="cm-variable-2">input</span> <span class="cm-operator">===</span> <span class="cm-atom">NaN</span>) {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-keyword">return</span> <span class="cm-number">0</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">6</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span>}<span class="cm-keyword">else</span> {</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">7</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-keyword">return</span> <span class="cm-number">1</span></span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">8</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span>}</span></pre></div><div style="position: relative;"><div class="CodeMirror-gutter-wrapper" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">9</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;">}</span></pre></div><div style="position: relative; display: none;" class="CodeMirror-activeline"><div class="CodeMirror-activeline-background CodeMirror-linebackground"></div><div class="CodeMirror-gutter-background CodeMirror-activeline-gutter" style="left: -30px; width: 30px;"></div><div class="CodeMirror-gutter-wrapper CodeMirror-activeline-gutter" style="left: -30px;"><div class="CodeMirror-linenumber CodeMirror-gutter-elt" style="left: 0px; width: 21px;">5</div></div><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-tab" role="presentation" cm-text="	">  </span><span class="cm-keyword">return</span> <span class="cm-number">0</span></span></pre></div></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 236px;"></div><div class="CodeMirror-gutters" style="height: 266px; left: 0px;"><div class="CodeMirror-gutter CodeMirror-linenumbers" style="width: 29px;"></div></div></div></div></div><button class="ui green large right floated button" role="button"><span>Check</span></button><button class="ui large right floated button" role="button" style="margin-right: 5px;"><span>Run</span></button></div></div><div role="tabpanel" aria-hidden="true" class="rc-tabs-tabpane rc-tabs-tabpane-inactive"></div><div role="tabpanel" aria-hidden="true" class="rc-tabs-tabpane rc-tabs-tabpane-inactive"></div><div role="tabpanel" aria-hidden="true" class="rc-tabs-tabpane rc-tabs-tabpane-inactive"></div></div></div></div><div class="six wide column"><div class="rc-tabs rc-tabs-top"><div role="tablist" class="rc-tabs-bar tabs-right no-highlight" tabindex="0" style="text-align: right;"><div class="rc-tabs-nav-container"><span unselectable="unselectable" class="rc-tabs-tab-prev rc-tabs-tab-btn-disabled"><span class="rc-tabs-tab-prev-icon"></span></span><span unselectable="unselectable" class="rc-tabs-tab-next rc-tabs-tab-btn-disabled"><span class="rc-tabs-tab-next-icon"></span></span><div class="rc-tabs-nav-wrap"><div class="rc-tabs-nav-scroll"><div class="rc-tabs-nav rc-tabs-nav-animated" style="transform: translate3d(0px, 0px, 0px);"><div class="rc-tabs-ink-bar rc-tabs-ink-bar-animated" style="display: block; transform: translate3d(84.1875px, 0px, 0px); width: 75px;"></div><div role="tab" aria-disabled="false" aria-selected="false" class=" rc-tabs-tab"><span>Tests</span></div><div role="tab" aria-disabled="false" aria-selected="true" class="rc-tabs-tab-active rc-tabs-tab"><span>Console</span></div></div></div></div></div></div><div class="rc-tabs-content rc-tabs-content-no-animated"><div role="tabpanel" aria-hidden="true" class="rc-tabs-tabpane rc-tabs-tabpane-inactive"><div id="Lab"><div class="ReactCodeMirror code-editor"><textarea autocomplete="off" style="display: none;">Test.assertEquals(isTruthy(1), 1)
Test.assertEquals(isTruthy(-1), 1)
Test.assertEquals(isTruthy("false"), 1)
Test.assertEquals(isTruthy([]), 1)
Test.assertEquals(isTruthy(true), 1)
Test.assertEquals(isTruthy({}), 1)
Test.assertEquals(isTruthy(function(){}), 1)
Test.assertEquals(isTruthy(0), 0)
Test.assertEquals(isTruthy(""), 0)
Test.assertEquals(isTruthy(null), 0)
Test.assertEquals(isTruthy(undefined), 0)
Test.assertEquals(isTruthy(false), 0)
Test.assertEquals(isTruthy(NaN), 0)
Test.assertEquals(isTruthy(''), 0)</textarea><div class="CodeMirror cm-s-default"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 11px; left: 12px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" tabindex="-1" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" tabindex="-1" cm-not-content="true" style="display: block; right: 0px; left: 0px; height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 407px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 356px; min-width: 406.875px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines" role="presentation"><div role="presentation" style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre class="CodeMirror-line-like">x</pre></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"><div class="CodeMirror-selected" style="position: absolute; left: 11px; top: 0px; width: 384.875px; height: 24px;"></div><div class="CodeMirror-selected" style="position: absolute; left: 11px; top: 312px; width: 303.688px; height: 24px;"></div><div class="CodeMirror-selected" style="position: absolute; left: 11px; top: 24px; width: 384.875px; height: 288px;"></div></div><div class="CodeMirror-cursors" style="visibility: hidden;"></div><div class="CodeMirror-code" role="presentation" style=""><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-number">1</span>), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-operator">-</span><span class="cm-number">1</span>), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-string">"false"</span>), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>([]), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-atom">true</span>), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>({}), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-keyword">function</span>(){}), <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-number">0</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-string">""</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-atom">null</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-atom">undefined</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-atom">false</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-atom">NaN</span>), <span class="cm-number">0</span>)</span></pre><pre class=" CodeMirror-line " role="presentation"><span role="presentation" style="padding-right: 0.1px;"><span class="cm-variable">Test</span>.<span class="cm-property">assertEquals</span>(<span class="cm-variable">isTruthy</span>(<span class="cm-string">''</span>), <span class="cm-number">0</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 356px;"></div><div class="CodeMirror-gutters" style="display: none; height: 386px;"></div></div></div></div></div></div><div role="tabpanel" aria-hidden="false" class="rc-tabs-tabpane rc-tabs-tabpane-active"><div id="Console" class="console-segment custom-bullets"><ul><li class=""></li><!-- react-text: 19420 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19422 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;1<!-- /react-text --></li><!-- react-text: 19423 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19425 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19427 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;1<!-- /react-text --></li><!-- react-text: 19428 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19430 -->
<!-- /react-text --><li class="test-failed"><!-- react-text: 19432 -->FAILED: Expected:&nbsp;1,&nbsp;instead&nbsp;got:&nbsp;0<!-- /react-text --></li><!-- react-text: 19433 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19435 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19437 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;1<!-- /react-text --></li><!-- react-text: 19438 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19440 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19442 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;1<!-- /react-text --></li><!-- react-text: 19443 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19445 -->
<!-- /react-text --><li class="test-failed"><!-- react-text: 19447 -->FAILED: Expected:&nbsp;1,&nbsp;instead&nbsp;got:&nbsp;0<!-- /react-text --></li><!-- react-text: 19448 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19450 -->
<!-- /react-text --><li class="test-failed"><!-- react-text: 19452 -->FAILED: Expected:&nbsp;1,&nbsp;instead&nbsp;got:&nbsp;0<!-- /react-text --></li><!-- react-text: 19453 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19455 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19457 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19458 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19460 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19462 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19463 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19465 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19467 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19468 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19470 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19472 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19473 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19475 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19477 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19478 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19480 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19482 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19483 -->
<!-- /react-text --><li class=""></li><!-- react-text: 19485 -->
<!-- /react-text --><li class="test-passed"><!-- react-text: 19487 -->Test&nbsp;Passed:&nbsp;Value&nbsp;==&nbsp;0<!-- /react-text --></li><!-- react-text: 19488 -->
<!-- /react-text --><li class=""></li></ul></div></div></div></div><button class="ui black large right floated button" role="button" style="margin-bottom: 15px;"><span>Skip</span></button></div></div></div></main><footer id="Footer"><div class="ui container no-highlight" style="margin: 0px; padding: 0px;"><div class="ui fitted divider" style="margin-bottom: 20px;"></div><div role="list" class="ui horizontal right floated list"><a href="https://edabit.com/contact" role="listitem" class="item"><span>Contact</span></a><a href="https://dev.to/edabit" target="_blank" role="listitem" class="item"><span>Blog</span></a><a href="https://edabit.com/about" role="listitem" class="item"><span>About</span></a></div><div role="list" class="ui horizontal left floated list"><div role="listitem" class="disabled item">© 2019 Edabit, Inc</div><a href="https://edabit.com/docs/terms" role="listitem" class="item"><span>Terms</span></a><a href="https://edabit.com/docs/privacy" role="listitem" class="item"><span>Privacy</span></a><a href="https://edabit.com/roadmap" role="listitem" class="item"><span>Roadmap</span></a><a href="https://edabit.com/challenge/czEAQio8zr9HjZsQn#" role="listitem" class="item"><span>Affiliates</span></a></div></div></footer><div role="listbox" aria-expanded="false" class="ui button compact labeled upward dropdown icon" tabindex="0" style="bottom: 0px; margin-bottom: 7px; min-width: 122px; position: fixed; right: 4px;"><div class="text" role="alert" aria-live="polite">English</div><i aria-hidden="true" class="caret up icon"></i><div class="menu transition"><div role="option" aria-checked="true" aria-selected="true" class="active selected item" style="pointer-events: all;"><i class="gb flag"></i><span class="text">English</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="es flag"></i><span class="text">Español</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="fr flag"></i><span class="text">Français</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="de flag"></i><span class="text">Deutsch</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="br flag"></i><span class="text">Português</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="jp flag"></i><span class="text">日本語</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="cn flag"></i><span class="text">中文</span></div><div role="option" aria-checked="false" aria-selected="false" class="item" style="pointer-events: all;"><i class="ru flag"></i><span class="text">Pусский</span></div></div></div><div class="s-alert-wrapper"></div></div></div><iframe name="_hjRemoteVarsFrame" title="_hjRemoteVarsFrame" id="_hjRemoteVarsFrame" src="./Truthy or Falsy_ __ Edabit_files/box-90f3a29ef7448451db5af955688970d7.html" style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;"></iframe><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div><div id="_hj_poll_container">                <style type="text/css">                    /*reset css*/                    ._hj-f5b2a1eb-9b07_widget, ._hj-f5b2a1eb-9b07_widget * {                        line-height: normal;                        font-family: Arial, sans-serif, Tahoma !important;                        text-transform: initial !important;                        letter-spacing: normal !important;                    }                    ._hj-f5b2a1eb-9b07_widget, ._hj-f5b2a1eb-9b07_widget div {                        height: auto;                    }                    ._hj-f5b2a1eb-9b07_widget div,                    ._hj-f5b2a1eb-9b07_widget span,                    ._hj-f5b2a1eb-9b07_widget p,                    ._hj-f5b2a1eb-9b07_widget a,                    ._hj-f5b2a1eb-9b07_widget button {                        font-weight: normal !important;                    }                    ._hj-f5b2a1eb-9b07_widget div,                    ._hj-f5b2a1eb-9b07_widget span,                    ._hj-f5b2a1eb-9b07_widget p,                    ._hj-f5b2a1eb-9b07_widget a,                    ._hj-f5b2a1eb-9b07_widget img,                    ._hj-f5b2a1eb-9b07_widget strong,                    ._hj-f5b2a1eb-9b07_widget form,                    ._hj-f5b2a1eb-9b07_widget label {                        border: 0;                        outline: 0;                        font-size: 100%;                        vertical-align: baseline;                        background: transparent;                        margin: 0;                        padding: 0;                        float: none !important;                    }                    ._hj-f5b2a1eb-9b07_widget span {color:inherit}                    ._hj-f5b2a1eb-9b07_widget ol,                    ._hj-f5b2a1eb-9b07_widget ul,                    ._hj-f5b2a1eb-9b07_widget li {                        list-style-type:none !important;                        margin: 0 !important;                        padding: 0 !important;                     }                    ._hj-f5b2a1eb-9b07_widget li:before,                    ._hj-f5b2a1eb-9b07_widget li:after {                        content: none !important;                    }                    ._hj-f5b2a1eb-9b07_widget hr {                        display:block;                        height:1px;                        border:0;                        border-top:1px                        solid #ccc;                        margin:1em 0;                        padding:0;                    }                    ._hj-f5b2a1eb-9b07_widget input[type=submit],                    ._hj-f5b2a1eb-9b07_widget input[type=button],                    ._hj-f5b2a1eb-9b07_widget button {                        margin: 0;                        padding:0;                        float: none !important;                    }                    ._hj-f5b2a1eb-9b07_widget input,                    ._hj-f5b2a1eb-9b07_widget select,                    ._hj-f5b2a1eb-9b07_widget a img {                        vertical-align:middle;                    }                    ._hj-f5b2a1eb-9b07_widget *:after, ._hj-f5b2a1eb-9b07_widget *::before {                        -webkit-box-sizing: initial;                        -moz-box-sizing: initial;                        box-sizing: initial;                    }                    /*******************                     * GENERIC                    ********************/                    @font-face {                        font-family: "hotjar";                        src: url("https://script.hotjar.com/font-hotjar_5.fdcf0e.eot");                        src: url("https://script.hotjar.com/font-hotjar_5.fdcf0e.eot#iefix") format("embedded-opentype"),                             url("https://script.hotjar.com/font-hotjar_5.c9fb91.woff2") format("woff2"),                             url("https://script.hotjar.com/font-hotjar_5.8598c5.ttf") format("truetype"),                             url("https://script.hotjar.com/font-hotjar_5.6da396.woff") format("woff"),                             url("https://script.hotjar.com/font-hotjar_5.a6049d.svg#hotjar") format("svg");                        font-weight: normal;                        font-style: normal;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon {                        speak: none !important;                        font-style: normal !important;                        font-weight: normal !important;                        font-variant: normal !important;                        text-transform: none !important;                        overflow-wrap: normal !important;                        word-break: normal !important;                        word-wrap: normal !important;                        white-space: nowrap !important;                        line-height: normal !important;                        -webkit-font-smoothing: antialiased !important;                        -moz-osx-font-smoothing: grayscale !important;                    }                                        div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon,                    div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon:before,                    div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon:after,                    div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon *,                    div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon *:before,                    div._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon *:after {                        font-family: "hotjar" !important;                        display: inline-block !important;                        direction: ltr !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_icon:before {                        color: inherit !important;                    }                                        ._hj-f5b2a1eb-9b07_icon-left:before     {content: "\e805";}                    ._hj-f5b2a1eb-9b07_icon-down:before     {content: "\e800";}                    ._hj-f5b2a1eb-9b07_icon-up:before       {content: "\e801";}                    ._hj-f5b2a1eb-9b07_icon-right:before    {content: "\e802";}                    ._hj-f5b2a1eb-9b07_icon-x:before        {content: "\e803";}                    ._hj-f5b2a1eb-9b07_icon-ok:before       {content: "\e804";}                    ._hj-f5b2a1eb-9b07_icon-hotjar:before   {content: "\e806";}                    ._hj-f5b2a1eb-9b07_icon-select-element:before   {content: "\e91a";}                                        /*generic css*/                    body._hj-f5b2a1eb-9b07_fullscreen_page {                        height: 100% !important;                        width: 100% !important;                    }                                        body._hj-f5b2a1eb-9b07_position_fixed {                        position: fixed;                        -webkit-overflow-scrolling: touch;                    }                                        ._hj-f5b2a1eb-9b07_lower_zindex:not(._hj-f5b2a1eb-9b07_widget) {                        z-index: 2147483600 !important;                    }                    ._hj-f5b2a1eb-9b07_widget {                        font-size:13px !important;                        position: fixed;                        z-index: 2147483640;                        bottom: -400px;                        right: 100px;                        width: 300px;                        -webkit-border-radius: 5px 5px 0 0;                        -moz-border-radius: 5px 5px 0 0;                        border-radius: 5px 5px 0 0;                        -webkit-transform: translateZ(0) !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_position_left {                        right: auto;                        left: 100px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_rounded_corners {                        -webkit-border-radius: 3px;                        -moz-border-radius: 3px;                        border-radius: 3px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_shadow {                        -webkit-box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.15);                        -moz-box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.15);                        box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.15);                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_transition {                        -webkit-transition: all .2s ease-in-out;                        -moz-transition: all .2s ease-in-out;                        -o-transition: all .2s ease-in-out;                        -ms-transition: all .2s ease-in-out;                        transition: all .2s ease-in-out;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_transition_duration_0 {                        -webkit-transition-duration: 0s;                        -moz-transition-duration: 0s;                        -o-transition-duration: 0s;                        -ms-transition-duration: 0s;                        transition-duration: 0s;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_pull_left {                        float: left !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_pull_right {                        float: right !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_clear_both {display: block !important; clear: both !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_hidden {display: none !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_link_no_underline,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_link_no_underline:hover {                        text-decoration: none !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_wordwrap {                        word-break: break-word;                        word-wrap: break-word;                    }                    /*common css*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_centered {                        right:50%;                        margin-right: -150px;                        left: auto;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_state {display: none;}                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_icon {                        background-repeat: no-repeat;                        width: 16px;                        height: 16px;                        display: -moz-inline-stack;                        display: inline-block !important;                        zoom: 1;                        *display: inline !important;                        vertical-align: top;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_open_close {                        text-align: center;                        position: absolute;                        top: -18px;                        right: 20px;                        width: 40px;                        height: 18px;                        padding-top: 2px;                        cursor: pointer;                        -webkit-border-radius: 5px 5px 0 0;                        -moz-border-radius: 5px 5px 0 0;                        border-radius: 5px 5px 0 0;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_open_close ._hj-f5b2a1eb-9b07_widget_icon {                        background-position: -32px 0;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_open_close::before {                        content: "";                        position: absolute;                        left: -4px;                        right: -4px;                        bottom: -8px;                        height: 8px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_hidden_handle {                        display:none;                        height: 4px;                        cursor:pointer;                        -webkit-border-radius: 5px 5px 0 0;                        -moz-border-radius: 5px 5px 0 0;                        border-radius: 5px 5px 0 0;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_title,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_title span {                        font-weight: bold !important;                        text-align: center;                        padding: 12px !important;                        margin: 0;                        line-height: 17px !important;                        min-height: 17px;                        word-break: break-word;                        word-wrap: break-word;                        cursor: pointer;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_initiator {                        display: none;                        padding: 0 12px 12px 12px;                        text-align: center;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_initiator button {                        padding-left: 20px;                        padding-right: 20px;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear,                     ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary {                        cursor: pointer;                        text-decoration: none !important;                        font-size: 13px !important;                        font-weight: bold !important;                        padding: 7px 10px !important;                        border: 0 !important;                        outline: 0 !important;                        height: initial !important;                        min-height: initial !important;                        display: -moz-inline-stack;                        display: inline-block;                        *display: inline;                        vertical-align: top;                        width: auto !important;                        min-width: initial !important;                        zoom: 1;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn:after,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear:after,                     ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary:after {                        content:none !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary {                        background: #00C764 !important;                        color: white;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_primary:active {                        background: #00a251 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear {                        background: transparent !important;                        font-weight: normal !important;                        text-decoration: underline !important;                        color: #c2ffff !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_clear:active {                        background: transparent !important;                        color: #c2ffff !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:active {                        cursor: default;                        -webkit-box-shadow: none;                        -moz-box-shadow: none;                        box-shadow: none;                    }                                        /*content*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content {padding:0 12px;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content_overflow {                        max-height: 280px;                        overflow-y: auto;                        overflow-x: hidden;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_short ._hj-f5b2a1eb-9b07_widget_content {                        padding:0 11px 0 12px;                        max-height: 120px;                        overflow-y: auto;                        overflow-x: hidden;                    }                                        /*open ended*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_input_field {                        font-family: Arial, sans-serif, Tahoma;                        font-size: 14px;                        color: #333 !important;                        padding: 6px !important;                        text-indent: 0 !important;                        height: 30px;                        width: 100%;                        min-width: 100%;                        margin: 0 0 12px 0;                        background: white;                        border: 1px solid #106eb4 !important;                        -webkit-box-sizing: border-box;                        -moz-box-sizing: border-box;                        box-sizing: border-box;                        outline: none !important;                        max-width: none !important;                        float: none;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_input_field:focus {                        border: 1px solid #00a251;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content textarea._hj-f5b2a1eb-9b07_input_field {                        resize: none; height: 100px;                    }                                        /*close ended*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox {                        position: relative;                        min-height: 45px;                        text-align:left !important;                        height:auto !important;                        height: 45px;                        -webkit-box-sizing: border-box;                        -moz-box-sizing: border-box;                        box-sizing: border-box;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox span._hj-f5b2a1eb-9b07_widget_icon {                        -webkit-border-radius: 30px;                        -moz-border-radius: 30px;                        border-radius: 30px;                        border: 2px solid #AAA;                        width: 22px;                        height: 22px;                        display: block;                        position: absolute;                        left: 12px;                        top: 50%;                        margin-top: -14px;                        background-position: -64px -100px;                        -webkit-box-sizing: content-box;                        -moz-box-sizing: content-box;                        box-sizing: content-box;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content                        ._hj-f5b2a1eb-9b07_button_radio_checkbox span._hj-f5b2a1eb-9b07_radio_checkbox_text {                        text-align: left !important;                        padding: 14px 20px 14px 50px;                        position: relative;                        display: block;                        word-break: break-word;                        word-wrap: break-word;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox_full {                        margin-left:-12px;                        margin-right: -12px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content                        ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active span {                        border-color: white;                        background-position: -97px 4px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_checkbox span._hj-f5b2a1eb-9b07_widget_icon {                        -webkit-border-radius: 4px;                        -moz-border-radius: 4px;                        border-radius: 4px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_double_control {                        margin: 0 0 12px 0;                        width: 100%;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_double_control ._hj-f5b2a1eb-9b07_double_first {                        min-width:49% !important;                        width:49% !important;                        float:left !important;                        margin-bottom: 0;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_double_control ._hj-f5b2a1eb-9b07_double_second {                        min-width:49% !important;                        width:49% !important;                        float:left !important;                        margin-bottom: 0;                        margin-left:2%;                    }                                        /* footer*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer {width: 100%;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left {                        padding: 21px 0 0 12px; font-size: 11px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a:active {                        text-decoration: underline;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left span {                        background-position: -16px 0; margin-right: 4px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right {padding: 12px 12px 12px 0;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button {padding-right: 5px;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button span {                        background-position: -64px 0;                        margin-left: 8px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button._hj-f5b2a1eb-9b07_btn_disabled span {                        background-position: -48px 0;                    }                                        /*state: hidden*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_hidden ._hj-f5b2a1eb-9b07_widget_open_close                        ._hj-f5b2a1eb-9b07_widget_icon {background-position: 0 0;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_hidden ._hj-f5b2a1eb-9b07_widget_title {display: none;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_hidden ._hj-f5b2a1eb-9b07_widget_hidden_handle {display: block;}                                        /*state: collapsed */                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_collapsed ._hj-f5b2a1eb-9b07_widget_initiator {display: block;}                                        /*state: open*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_open ._hj-f5b2a1eb-9b07_widget_state_open {display: block;}                                        /*state: thankyou*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou ._hj-f5b2a1eb-9b07_widget_state_thankyou,                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou_consent ._hj-f5b2a1eb-9b07_widget_state_thankyou_consent {display: block;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou ._hj-f5b2a1eb-9b07_widget_open_close,                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou_consent ._hj-f5b2a1eb-9b07_widget_open_close {display: none;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou ._hj-f5b2a1eb-9b07_widget_title,                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou_consent ._hj-f5b2a1eb-9b07_widget_title {display: none;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right ._hj-f5b2a1eb-9b07_btn span,                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_widget_thankyou_consent ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right ._hj-f5b2a1eb-9b07_btn span {                        background-position: -80px 0;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message {text-align: center; padding: 20px; margin: 0;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message button {margin-top: 12px; padding: 7px 20px !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message ._hj-f5b2a1eb-9b07_consent_message_title {                        display: block;                        font-weight: bold !important;                        font-size: 14px;                        margin-bottom: 16px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message ._hj-f5b2a1eb-9b07_consent_message_text,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message ._hj-f5b2a1eb-9b07_consent_message_text a {                    color: #c2ffff !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message ._hj-f5b2a1eb-9b07_consent_actions button {                        font-size: 18px !important;                        margin: 20px 5px 0 5px;                        padding: 7px 10px !important;                        width: 50px !important;                    }                    /************ theme css **************/                    ._hj-f5b2a1eb-9b07_widget {                        background: #2987CD !important;                        color: #FFF !important;                    }                    ._hj-f5b2a1eb-9b07_widget a, ._hj-f5b2a1eb-9b07_widget a:link, ._hj-f5b2a1eb-9b07_widget a:hover, ._hj-f5b2a1eb-9b07_widget a:active {                        color: #FFF !important;                    }                    ._hj-f5b2a1eb-9b07_widget p {color: #FFF !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_open_close::before {                        background: #2987CD !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_icon {                        background-image:                             url(https://script.hotjar.com/widget_icons_light.ddcd59.png) !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_open_close {background: #2987CD !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_hidden_handle {                        background: #2987CD !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn {                        background: #43a1e7 !important;                        color: #FFF !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn:hover, ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn:focus,  ._hj-f5b2a1eb-9b07_btn:active {                        background: #666 !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_input_field {                        border: 1px solid #106eb4 !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox {                        border-bottom: 1px solid #2987CD !important;                        border-top: 1px solid #5cbaff !important;                        background: #43a1e7 !important;                        cursor: pointer !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox_last {border-bottom:0 !important;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox:hover {                        background: #5cbaff !important;                        color: #111;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active:hover {                        background: #5cbaff !important;                        color: white !important;                        cursor: default;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch {                        position: relative;                        display: inline-block;                        width: 46px;                        height: 28px;                        vertical-align: middle;                        margin: -3px 8px 0 0;                    }                                        ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_switch {                        margin: -3px 0 0 8px;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input {                        cursor: pointer;                        display: block !important;                        width: 46px;                        height: 28px;                        position: absolute;                        left: 0;                        right: 0;                        z-index: 2;                        opacity: 0;                        margin: 0;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input + label {                        cursor: pointer;                        position: absolute;                        top: 0;                        left: 0;                        right: 0;                        bottom: 0;                        background: rgba(0,0,0,1);                        border: 2px solid rgba(255,255,255,.3);                        border-radius: 100px;                        -webkit-transition: 400ms all;                           -moz-transition: 400ms all;                                transition: 400ms all;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input:checked + label {                        background: rgba(0,0,0,.3);                        border-color: transparent;                        -webkit-transition: 250ms all;                           -moz-transition: 250ms all;                                transition: 250ms all;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input + label:before {                        content: "";                        transition: 300ms all;                        position: absolute;                        left: 0;                        top: 0;                        display: block;                        width: 24px;                        height: 24px;                        border-radius: 40px;                        background-color: #ffffff;                        background-position: center center;                        background-repeat: no-repeat;                        background-size: 5px;                        -webkit-box-shadow: 0 0 12px 0 rgba(0,0,0,.06), 0 0 0 0 rgba(0,0,0,.06), 0 6px 10px 0 rgba(0,0,0,.15), 0 0 2px 0 rgba(0,0,0,.07), 0 4px 6px 0 rgba(0,0,0,.06), 0 1px 1px 0 rgba(0,0,0,.11);                        -moz-box-shadow: 0 0 12px 0 rgba(0,0,0,.06), 0 0 0 0 rgba(0,0,0,.06), 0 6px 10px 0 rgba(0,0,0,.15), 0 0 2px 0 rgba(0,0,0,.07), 0 4px 6px 0 rgba(0,0,0,.06), 0 1px 1px 0 rgba(0,0,0,.11);                        box-shadow: 0 0 12px 0 rgba(0,0,0,.06), 0 0 0 0 rgba(0,0,0,.06), 0 6px 10px 0 rgba(0,0,0,.15), 0 0 2px 0 rgba(0,0,0,.07), 0 4px 6px 0 rgba(0,0,0,.06), 0 1px 1px 0 rgba(0,0,0,.11);                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input + label > span {                        position: absolute;                        z-index: 3;                        color: ;                        background-color: transparent !important;                        border: 0 !important;                        width: 13px !important;                        height: 14px !important;                        left: 6px;                        top: 5px;                        margin: 0 !important;                        opacity: 0;                        font-size: 14px;                        pointer-events: none !important;                        -webkit-transition: 250ms all;                           -moz-transition: 250ms all;                                transition: 250ms all;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input:checked + label:before {                        left: 18px;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input:checked + label > span {                        left: 24px;                        opacity: 1;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_switch > input:checked + label > span:after {                        content: initial !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer {                        border-top: 1px solid #106eb4 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left a:hover {                        color: #c2ffff !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_btn_disabled:active {                        color: #2987CD !important;                        background: #43a1e7 !important;                    }                                        /*light theme css*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_light, ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_light ._hj-f5b2a1eb-9b07_widget_open_close {                        -webkit-box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.3) !important;                        -moz-box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.3) !important;                        box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.3) !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_light ._hj-f5b2a1eb-9b07_widget_icon {                        background-image:                             url(https://script.hotjar.com/widget_icons_light.ddcd59.png) !important;                    }                                        /*dark theme css*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_dark, ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_dark ._hj-f5b2a1eb-9b07_widget_open_close {                        -webkit-box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.6) !important;                        -moz-box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.6) !important;                        box-shadow: 0 0 7px 0 rgba(0, 0, 0, 0.6) !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_skin_dark ._hj-f5b2a1eb-9b07_widget_icon {                        background-image:                             url(https://script.hotjar.com/widget_icons_dark.3a8118.png) !important;                    }                                        /*right-to-left css*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl, ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl * {direction: rtl !important;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left {direction: ltr !important;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button {padding-right: 10px;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button span {margin-left: 0;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl._hj-f5b2a1eb-9b07_widget_open ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_right button span {                        display: none;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox {                        text-align:right !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox                        span._hj-f5b2a1eb-9b07_widget_icon {                        left: auto;                        right: 12px;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_widget_content ._hj-f5b2a1eb-9b07_button_radio_checkbox                        span._hj-f5b2a1eb-9b07_radio_checkbox_text {                        text-align:right !important;                        padding: 14px 50px 14px 20px;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_double_control ._hj-f5b2a1eb-9b07_double_first {                        float:right;                        margin-left:2%;}                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_double_control ._hj-f5b2a1eb-9b07_double_second {                        float:left;                        margin-left:0;}                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_thankyou_message ._hj-f5b2a1eb-9b07_more_info_link { text-decoration: underline !important; }                                        /* legal footer */                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal {                        border-top: 0 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left {                        padding: 0px 0px 12px 12px;                        font-size: 11px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_right {                        padding: 0px 12px 12px 0px;                        font-size: 11px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_right a {                        color: #c2ffff !important;                    }                    #_hj-f5b2a1eb-9b07_feedback[data-state="consent"] #_hj-f5b2a1eb-9b07_feedback_open ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left,                     #_hj-f5b2a1eb-9b07_feedback[data-state="consent"] #_hj-f5b2a1eb-9b07_feedback_open ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_right a {                        color: #333 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left a,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left a:hover,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left a:focus,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_legal ._hj-f5b2a1eb-9b07_pull_left a:active {                        text-decoration: underline !important;                    }                    </style><style type="text/css">                    /* Multiple question css adaptations */                                        /*comment fields*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox ._hj-f5b2a1eb-9b07_comment_box {                        display: none; margin: 0 20px 0 50px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_button_radio_checkbox ._hj-f5b2a1eb-9b07_comment_box > textarea {                        font-size: 13px !important;                        height: 50px !important;                        max-height: 50px !important;                        min-height: auto !important;                        margin-bottom: 8px !important;                        border: 0 !important;                    }                                        ._hj-f5b2a1eb-9b07_widget                         ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active._hj-f5b2a1eb-9b07_with_comment                             span._hj-f5b2a1eb-9b07_widget_icon {                        top: 14px !important; margin-top: 0 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content                        ._hj-f5b2a1eb-9b07_button_radio_checkbox span._hj-f5b2a1eb-9b07_radio_checkbox_text {                        color: #FFF !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_content                        ._hj-f5b2a1eb-9b07_button_radio_checkbox span._hj-f5b2a1eb-9b07_radio_checkbox_text:hover {                        color: #111 !important;                    }                    ._hj-f5b2a1eb-9b07_widget                         ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active._hj-f5b2a1eb-9b07_with_comment                             span._hj-f5b2a1eb-9b07_radio_checkbox_text {                        padding-bottom: 10px !important;                    }                    ._hj-f5b2a1eb-9b07_widget                         ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active._hj-f5b2a1eb-9b07_with_comment                             ._hj-f5b2a1eb-9b07_comment_box {                        display: block;                    }                                        /* Scale questions */                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul {                        margin: 4px 0 0 0 !important; height: 28px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score {                        list-style-type: none !important;                        list-style-image: none !important;                        float: left !important; width: 22px !important;                         padding: 4px 0 5px 0 !important;                        margin: 0 3px 0 0 !important;                        border-radius: 2px;                        text-align: center !important;                        opacity: 0.75 !important;                        clear: none !important;                        cursor:pointer;                        text-indent: 0;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores._hj-f5b2a1eb-9b07_rating-scale-5 > ul {                        height: 38px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores._hj-f5b2a1eb-9b07_rating-scale-5 > ul > li._hj-f5b2a1eb-9b07_button_score {                        width: 48px !important;                        font-size: 15px !important;                        padding: 8px 0 9px 0 !important;                        margin: 0 9px 0 0 !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores._hj-f5b2a1eb-9b07_rating-scale-7 > ul {                        height: 36px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores._hj-f5b2a1eb-9b07_rating-scale-7 > ul > li._hj-f5b2a1eb-9b07_button_score {                        width: 35px !important;                        font-size: 15px !important;                        padding: 6px 0 7px 0 !important;                        margin: 0 5px 0 0 !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score:last-child {                        margin-right: 0 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores._hj-f5b2a1eb-9b07_net-promoter-score > ul > li._hj-f5b2a1eb-9b07:last-child {                        width: 24px !important; padding-right: 1px !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores ._hj-f5b2a1eb-9b07_scale_labels {                        padding: 5px 0 12px 0; font-size: 12px;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores ._hj-f5b2a1eb-9b07_scale_labels ._hj-f5b2a1eb-9b07_pull_left,                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores ._hj-f5b2a1eb-9b07_scale_labels ._hj-f5b2a1eb-9b07_pull_right {                        max-width: 45%; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;                        color: #c2ffff !important;                    }                                        ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score {                        border-bottom: 1px solid #2987CD !important;                        border-top: 1px solid #5cbaff !important;                        background: #43a1e7 !important;                        color: #FFF !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score:hover {                        background: #5cbaff !important;                        color: #111;                        opacity: 1 !important;                        color: #111 !important;                    }                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores > ul                             > li._hj-f5b2a1eb-9b07_button_score._hj-f5b2a1eb-9b07_button_score_active,                     ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_scale_scores                         > ul                             > li._hj-f5b2a1eb-9b07_button_score._hj-f5b2a1eb-9b07_button_score_active:hover {                        background: #5cbaff !important;                         color: white !important;                         cursor: default;                        opacity: 1 !important;                    }                    /*footer*/                    ._hj-f5b2a1eb-9b07_widget ._hj-f5b2a1eb-9b07_widget_footer ._hj-f5b2a1eb-9b07_pull_left span {color: #f4364c;}                    /*right-to-left css*/                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_button_radio_checkbox ._hj-f5b2a1eb-9b07_comment_box {                        margin: 0 50px 0 20px !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl                     ._hj-f5b2a1eb-9b07_button_radio_checkbox._hj-f5b2a1eb-9b07_button_radio_checkbox_active._hj-f5b2a1eb-9b07_with_comment span                    ._hj-f5b2a1eb-9b07_radio_checkbox_text {                        padding: 14px 50px 10px 20px !important;                    }                                        ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score {                        float: right !important;                        margin: 0 0 0 3px !important;                        border-radius: 2px;                        text-align: center !important;                        opacity: 0.75 !important;                        cursor:pointer;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_scale_scores > ul > li._hj-f5b2a1eb-9b07_button_score_last {                        margin-left: 0 !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_scale_scores ._hj-f5b2a1eb-9b07_scale_labels                         ._hj-f5b2a1eb-9b07_pull_left {                        float: right !important;                    }                    ._hj-f5b2a1eb-9b07_widget._hj-f5b2a1eb-9b07_rtl ._hj-f5b2a1eb-9b07_scale_scores ._hj-f5b2a1eb-9b07_scale_labels                         ._hj-f5b2a1eb-9b07_pull_right {                        float: left !important;                    }                </style><div id="_hj-f5b2a1eb-9b07_poll" class="_hj-f5b2a1eb-9b07_widget _hj-f5b2a1eb-9b07_ltr _hj-f5b2a1eb-9b07_skin_dark _hj-f5b2a1eb-9b07_position_left _hj-f5b2a1eb-9b07_widget_hidden" style="bottom: 0px;">                    <a class="_hj-f5b2a1eb-9b07_widget_open_close _hj-f5b2a1eb-9b07_action_toggle_widget"><span class="_hj-f5b2a1eb-9b07_widget_icon"></span></a>                    <div class="_hj-f5b2a1eb-9b07_widget_hidden_handle _hj-f5b2a1eb-9b07_action_toggle_widget"></div>                    <p class="_hj-f5b2a1eb-9b07_widget_title _hj-f5b2a1eb-9b07_action_open_widget">                                                    <span id="_hj-f5b2a1eb-9b07_question_text_0" class="_hj-f5b2a1eb-9b07_question_text ">What feature would you like most?</span>                                            </p>                    <div class="_hj-f5b2a1eb-9b07_widget_initiator">                        <button type="button" class="_hj-f5b2a1eb-9b07_btn_primary _hj-f5b2a1eb-9b07_rounded_corners _hj-f5b2a1eb-9b07_transition                             _hj-f5b2a1eb-9b07_shadow _hj-f5b2a1eb-9b07_action_open_widget">Reply</button>                    </div>                    <div class="_hj-f5b2a1eb-9b07_widget_state _hj-f5b2a1eb-9b07_widget_state_open">                                                    <div id="_hj-f5b2a1eb-9b07_question_content_0" _hj_question_type="single-close-ended" class="_hj-f5b2a1eb-9b07_question_content ">                                                                    <div class="_hj-f5b2a1eb-9b07_widget_content                                        _hj-f5b2a1eb-9b07_widget_content_overflow                                    ">                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio" data-key="response" data-index="3" data-value="Night mode">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Night mode                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_0_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio" data-key="response" data-index="1" data-value="Search bar">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Search bar                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_1_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio" data-key="response" data-index="2" data-value="Leaderboard">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Leaderboard                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_2_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio" data-key="response" data-index="4" data-value="Ability to comment on solutions">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Ability to comment on solutions                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_3_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio" data-key="response" data-index="0" data-value="Achievements">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Achievements                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_4_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                                <div class="_hj-f5b2a1eb-9b07_button_radio_checkbox _hj-f5b2a1eb-9b07_button_radio_checkbox_full                                             _hj-f5b2a1eb-9b07_button_radio                                                _hj-f5b2a1eb-9b07_button_radio_checkbox_last                                            " data-key="response" data-index="5" data-value="Email reminders (sent weekly with recommended challenges)">                                                                                            <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                                <span class="_hj-f5b2a1eb-9b07_radio_checkbox_text">                                                    Email reminders (sent weekly with recommended challenges)                                                </span>                                                <div class="_hj-f5b2a1eb-9b07_comment_box">                                                    <textarea maxlength="255" class="_hj-f5b2a1eb-9b07_input_field _hj-f5b2a1eb-9b07_rounded_corners" name="_hj-f5b2a1eb-9b07_question_0_answer_5_comment" rows="3" placeholder="Please type here..."></textarea>                                                </div>                                                                                    </div>                                                                            </div>                                                            </div>                                                <div class="_hj-f5b2a1eb-9b07_widget_footer">                                                        <div class="_hj-f5b2a1eb-9b07_pull_right">                                <button type="button" id="_hj-f5b2a1eb-9b07_action_submit" class="_hj-f5b2a1eb-9b07_btn_primary _hj-f5b2a1eb-9b07_btn_disabled _hj-f5b2a1eb-9b07_rounded_corners                                         _hj-f5b2a1eb-9b07_transition _hj-f5b2a1eb-9b07_shadow">Next                                     <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                </button>                            </div>                            <div class="_hj-f5b2a1eb-9b07_clear_both"></div>                        </div>                    </div>                    <div class="_hj-f5b2a1eb-9b07_widget_state _hj-f5b2a1eb-9b07_widget_state_thankyou">                        <p class="_hj-f5b2a1eb-9b07_thankyou_message">                            Thank you for answering this Poll. Your feedback is highly appreciated!<br>                            <button type="button" class="_hj-f5b2a1eb-9b07_btn_primary _hj-f5b2a1eb-9b07_rounded_corners _hj-f5b2a1eb-9b07_transition                                 _hj-f5b2a1eb-9b07_shadow _hj-f5b2a1eb-9b07_action_dismiss_widget">Close</button>                        </p>                                                <div class="_hj-f5b2a1eb-9b07_widget_footer">                                                        <div class="_hj-f5b2a1eb-9b07_pull_right">                                <button type="button" class="_hj-f5b2a1eb-9b07_btn _hj-f5b2a1eb-9b07_btn_disabled _hj-f5b2a1eb-9b07_rounded_corners                                     _hj-f5b2a1eb-9b07_transition _hj-f5b2a1eb-9b07_shadow">Sent                                     <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                </button>                            </div>                            <div class="_hj-f5b2a1eb-9b07_clear_both"></div>                        </div>                    </div>                    <div class="_hj-f5b2a1eb-9b07_widget_state _hj-f5b2a1eb-9b07_widget_state_thankyou_consent">                        <div class="_hj-f5b2a1eb-9b07_thankyou_message">                            <p class="_hj-f5b2a1eb-9b07_consent_message_title">Thank you for answering this Poll. Your feedback is highly appreciated!</p>                            <span class="_hj-f5b2a1eb-9b07_consent_message_text">Connecting your feedback with data related to your visits (device-specific, usage data, cookies, behavior and interactions) will help us improve faster. Do you give us your consent to do so for your previous and future visits?&nbsp;                                <a href="https://www.hotjarconsent.com/" class="_hj-f5b2a1eb-9b07_more_info_link" target="_blank" rel="noopener">                               More information                            </a></span>                            <div class="_hj-f5b2a1eb-9b07_consent_actions">                                <button class="_hj-f5b2a1eb-9b07_btn_primary _hj-f5b2a1eb-9b07_rounded_corners" data-consent="false" type="button">                                    <i class="_hj-f5b2a1eb-9b07_icon _hj-f5b2a1eb-9b07_icon-x"></i>                                </button>                                <button class="_hj-f5b2a1eb-9b07_btn_primary _hj-f5b2a1eb-9b07_rounded_corners" data-consent="true" type="button">                                    <i class="_hj-f5b2a1eb-9b07_icon _hj-f5b2a1eb-9b07_icon-ok"></i>                                </button>                             </div>                        </div>                                                <div class="_hj-f5b2a1eb-9b07_widget_footer">                                                        <div class="_hj-f5b2a1eb-9b07_pull_right">                                <button type="button" class="_hj-f5b2a1eb-9b07_btn _hj-f5b2a1eb-9b07_btn_disabled _hj-f5b2a1eb-9b07_rounded_corners                                     _hj-f5b2a1eb-9b07_transition _hj-f5b2a1eb-9b07_shadow">Sent                                     <span class="_hj-f5b2a1eb-9b07_widget_icon"></span>                                </button>                            </div>                            <div class="_hj-f5b2a1eb-9b07_clear_both"></div>                        </div>                    </div>                </div></div></div></body></html>